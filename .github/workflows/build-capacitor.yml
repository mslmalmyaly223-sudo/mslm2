name: Build AAB (Capacitor)

on:
  workflow_dispatch:

jobs:
  build-aab:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Prepare webDir (move root files into www if needed)
        run: |
          if [ ! -d "www" ]; then
            mkdir www
            for f in * .*; do
              case "$f" in
                www|.git|.github|.|..) continue ;;
              esac
              mv "$f" www/ 2>/dev/null || true
            done
          fi
          ls -la www

      - name: Install Capacitor CLI (local)
        run: |
          npm init -y
          npm i @capacitor/cli @capacitor/core

      - name: Init Capacitor project
        run: npx cap init "سوق الطلاب" "com.msix.msilm2" --web-dir=www --npm-client npm

      - name: Add Android platform
        run: npx cap add android

      - name: Set SDK + version
        shell: bash
        run: |
          APP_GRADLE="android/app/build.gradle"
          sed -i 's/compileSdkVersion[[:space:]]\+[0-9]\+/compileSdkVersion 35/' "$APP_GRADLE" || true
          sed -i 's/targetSdkVersion[[:space:]]\+[0-9]\+/targetSdkVersion 35/' "$APP_GRADLE" || true
          sed -i 's/versionCode[[:space:]]\+[0-9]\+/versionCode '"${VERSION_CODE}"'/' "$APP_GRADLE" || echo "versionCode ${VERSION_CODE}" >> "$APP_GRADLE"
          sed -i 's/versionName[[:space:]]\+".*"/versionName "'"${VERSION_NAME}"'"/' "$APP_GRADLE" || echo 'versionName "'"${VERSION_NAME}"'"' >> "$APP_GRADLE"
        env:
          VERSION_CODE: ${{ secrets.VERSION_CODE }}
          VERSION_NAME: ${{ secrets.VERSION_NAME }}

      - name: Build AAB (unsigned)
        working-directory: android
        run: ./gradlew :app:bundleRelease

      - name: Restore keystore
        run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > upload-key.jks

      - name: Sign the AAB
        shell: bash
        run: |
          AAB=android/app/build/outputs/bundle/release/app-release.aab
          jarsigner -verbose \
            -keystore upload-key.jks \
            -storepass "${{ secrets.KEYSTORE_PASSWORD }}" \
            -keypass "${{ secrets.KEY_ALIAS_PASSWORD }}" \
            "$AAB" "${{ secrets.KEY_ALIAS }}"
          mv "$AAB" android/app/build/outputs/bundle/release/app-release-signed.aab

      - name: Verify signature
        run: jarsigner -verify -verbose -certs android/app/build/outputs/bundle/release/app-release-signed.aab

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-signed-aab
          path: android/app/build/outputs/bundle/release/app-release-signed.aab
          if-no-files-found: error
